apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom-keycloak-proxy
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: prom-keycloak-proxy
    spec:
      containers:
        - name: prom-keycloak-proxy
          envFrom:
            - secretRef:
                name: REPLACE_IN_OVERLAY
          env:
            - name: PROXY_ACM_HUB
              value: REPLACE_IN_OVERLAY
            - name: PROXY_PROMETHEUS_CA_CRT
              value: /opt/prom-keycloak-proxy-certs/ca.crt
            - name: PROXY_PROMETHEUS_TLS_CRT
              value: /opt/prom-keycloak-proxy-certs/tls.crt
            - name: PROXY_PROMETHEUS_TLS_KEY
              value: /opt/prom-keycloak-proxy-certs/tls.key
            - name: PROXY_AUTH_REALM
              value: NERC
            - name: PROXY_AUTH_BASE_URL
              value: https://keycloak.apps.obs.nerc.mghpcc.org
            - name: PROXY_AUTH_TLS_VERIFY
              value: 'true'
            - name: PROXY_HUB_KEY
              value: HUB
            - name: PROXY_CLUSTER_KEY
              value: CLUSTER
            - name: PROXY_PROJECT_KEY
              value: PROJECT
          image: quay.io/nerc-images/prom-keycloak-proxy:2.2.0
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/bin/curl
                - http://localhost:8080
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/bin/curl
                - http://localhost:8080
            failureThreshold: 6
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1Gi
              cpu: '1'
          volumeMounts:
            - mountPath: /opt/prom-keycloak-proxy-certs
              name: prom-keycloak-proxy-certs
              readOnly: true
      volumes:
        - name: prom-keycloak-proxy-certs
          secret:
            secretName: REPLACE_IN_OVERLAY
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
