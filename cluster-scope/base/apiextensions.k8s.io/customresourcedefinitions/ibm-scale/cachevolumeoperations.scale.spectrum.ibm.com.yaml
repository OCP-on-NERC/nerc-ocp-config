apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    app.kubernetes.io/instance: ibm-spectrum-scale
    app.kubernetes.io/name: operator
  name: cachevolumeoperations.scale.spectrum.ibm.com
spec:
  group: scale.spectrum.ibm.com
  names:
    categories:
    - scale
    kind: CacheVolumeOperation
    listKind: CacheVolumeOperationList
    plural: cachevolumeoperations
    shortNames:
    - cvo
    singular: cachevolumeoperation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: Action
      type: string
    - jsonPath: .spec.cacheVolume
      name: CacheVolume
      type: string
    - jsonPath: .status.conditions[?(@.type=="OperationCompleted")].status
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.type=="OperationCompleted")].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CacheVolumeOperation is the Schema for the cachevolumeoperations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              action:
                description: action specifies the operation to perform (Download or
                  Evict)
                enum:
                - Download
                - Evict
                type: string
              cacheVolume:
                description: cacheVolume is the name of the associated CacheVolume
                type: string
              contentFilter:
                description: contentFilter specifies the objects for download or eviction
                  based on the specified operation
                items:
                  type: string
                type: array
              contentType:
                default: DataAndMetadata
                description: contentType specifies the type of content for the operation
                  (DataAndMetadata, DataOnly, MetadataOnly)
                enum:
                - DataAndMetadata
                - DataOnly
                - MetadataOnly
                type: string
              ttlDuration:
                default: 24h
                description: |-
                  ttlDuration specifies the time duration to wait before automatically deleting the CVO after successful completion.
                  It can be specified in hours (e.g. 5h) or in days (2h). The default value is 24h.
                pattern: ^[0-9]+[dh]$
                type: string
            required:
            - action
            - cacheVolume
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the operation
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failedToQueueCount:
                description: FailedToQueueCount is the number of invalid files specified
                  by users which could not be added to the download queue.
                type: integer
              retryAttempts:
                description: RetryAttempts specifies the number of retry attempts
                  for the operation
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
