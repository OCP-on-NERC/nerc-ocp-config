apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    app.kubernetes.io/instance: ibm-spectrum-scale
    app.kubernetes.io/name: operator
  name: localdisks.scale.spectrum.ibm.com
spec:
  group: scale.spectrum.ibm.com
  names:
    categories:
    - scale
    kind: LocalDisk
    listKind: LocalDiskList
    plural: localdisks
    shortNames:
    - ld
    - nsd
    singular: localdisk
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.type
      name: Type
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Used")].status
      name: Used
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].status
      name: Available
      type: string
    - jsonPath: .status.filesystem
      name: Filesystem
      type: string
    - jsonPath: .status.pool
      name: Pool
      priority: 10
      type: string
    - jsonPath: .status.failuregroup
      name: Failuregroup
      priority: 10
      type: string
    - jsonPath: .status.size
      name: Size
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: LocalDisc is the Schema for the localdisks API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of LocalDisk
            properties:
              device:
                description: device specifies the device path that is used at creation
                  time. The device path of a disk may change at later time after node
                  reboots.
                type: string
              existingDataSkipVerify:
                description: |-
                  existingDataSkipVerify controls whether existing Spectrum Scale data structure should be overwritten when creating the disk.
                  A disk can have Spectrum Scale data structures on if it was used in a filesystem before and if it has not properly cleaned up.
                  If false, a "DiskHasFilesystemData" event is displayed if the disk still has Spectrum Scale data on it, and the disk will not be used.
                  If true, the disk will be formatted, no matter if it still has data on it.
                type: boolean
              failureGroup:
                description: |-
                  failureGroup is the failure group number for this disk. This parameter is only used if the filesystem that uses this disk is
                  replicated (means the Filesystem parameter spec.replication is "2-way" or "3-way"). The replicas of blocks are written to disks with
                  different failure group numbers.
                  Specify a positive number greater or equal than zero and use quotation marks, for example "2".
                  If this parameter is not specified, the failure group numbers are automatically assigned. Refer to the documentation for more
                  information on automatic failure group assignment.
                  This parameter cannot be changed anymore as soon as the local disk is used by a filesystem.
                maxLength: 6
                pattern: ^([0-9]*)?$
                type: string
              node:
                description: node specifies the kubernetes node name of node where
                  the local disk device path (see "device" parameter) is gathered
                  from at creation time.
                type: string
              nodeConnectionSelector:
                description: |-
                  nodeConnectionSelector selects the nodes which are expected to have a physical connection to the disk. If not specified, all
                  nodes are expected to have a physical connection to the disk.
                  The operator verifies if the disks are visible on the selected nodes.
                  This parameter must not be specified if the disk is only connected to the node specified in spec.node, which means the disk type is "unshared".
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              thinDiskType:
                default: "no"
                description: 'thinDiskType specfies the space reclaim disk type of
                  IBM Spectrum Scale disks (default: no)'
                enum:
                - "no"
                - nvme
                - scsi
                - auto
                type: string
            required:
            - device
            - node
            type: object
          status:
            description: status defines the observed state of LocalDisk
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failuregroup:
                description: failuregroup is the failuregroup number for this localdisk.
                  The replicas of data blocks are written to localdisks with different
                  failuregroup numbers.
                type: string
              failuregroupMapping:
                description: |-
                  failuregroupMapping describes to which Kubernetes object the failuregroup is mapped to during automatic failuregroup assignment.
                  This can be a Kubernetes node, a Kubernetes zone or a Kubernetes region. This is empty if the failure group number is configured in spec.failureGroup.
                type: string
              filesystem:
                description: filesystem is the name of the filesystem that uses this
                  localdisk. If this is empty, the localdisk is not used by a filesystem.
                type: string
              nodeConnections:
                description: nodeConnections is the list of nodes that have a connection
                  to the disk.
                type: string
              pool:
                description: pool is the name of the filesystem pool that uses this
                  localdisk. If this is empty, the localdisk is not used by a filesystem.
                type: string
              size:
                description: size is the size of the localdisk
                type: string
              type:
                description: type of the localdisk. This is "shared" if the disk is
                  connected to all core pods (or the pods selected by spec.nodeConnectionSelector).
                  This is "partially-shared" if the disk is connected to only a subset
                  of all core pods (or the pods selected by spec.nodeConnectionSelector).
                  This is "unshared" if the disk is only connected to one core pod.
                type: string
            required:
            - failuregroup
            - filesystem
            - nodeConnections
            - pool
            - size
            - type
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
